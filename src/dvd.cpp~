#include "dvd.hpp"

#include <SDL2/SDL_image.h>

#include <SDL2/SDL_render.h>

#include <iostream>

#include "SDL2/SDL_error.h"
#include "SDL2/SDL_log.h"
#include "game.hpp"

#include <cstddef>

// Image has to be 32x32
void DVD::setImage(const char *path)
{
    SDL_Surface *loadedSurface = IMG_Load(path);

    if (loadedSurface == NULL)
    {
        SDL_Log("Surface is null: %s", SDL_GetError());
    }
    else
    {
        texture =
            SDL_CreateTextureFromSurface(Logo::gameRenderer, loadedSurface);
        SDL_FreeSurface(loadedSurface);
    }

    if (texture == nullptr)
        std::cerr << "Error loading texture: " << SDL_GetError() << std::endl;
}

void DVD::setVelocity(int x, int y)
{
    velocity.x = x;
    velocity.y = y;
}

void DVD::init()
{
    dstRect.x = 0;
    dstRect.y = 0;
    dstRect.w = 32;
    dstRect.h = 32;
}

void DVD::update()
{
    dstRect.x = 0;
    dstRect.y = 0;

    // std::cout << "dstRect x: " << dstRect.x << ", dstRect y: " << dstRect.y
    // << std::endl;

    if (texture == nullptr)
    {
        SDL_Log("Texture is null");
        return;
    }

    int width, height;
    uint32_t format;
    int access;

    if (SDL_QueryTexture(texture, &format, &access, &width, &height) != 0)
        SDL_Log("Error querying texture: %s", SDL_GetError());
    else
        SDL_Log("Texture width: %d, height: %d", width, height);

    if (SDL_RenderCopy(Logo::gameRenderer, texture, NULL, NULL) != 0)
        SDL_Log("%s", SDL_GetError());
}

void DVD::destroy() { SDL_DestroyTexture(texture); }
